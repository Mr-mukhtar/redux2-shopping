{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './UI-Slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendcartData = cart => {\n  return async dispatch => {\n    const sendCodedata = async () => {\n      dispatch(uiActions.showNotifcation({\n        status: 'pending',\n        title: 'sending',\n        message: 'Sending cart data!'\n      }));\n      const sendRequest = async () => {\n        const response = await fetch('https://expensetracker-20e7a-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json', {\n          method: 'POST',\n          body: JSON.stringify(cart)\n        });\n        if (!response.ok) {\n          throw new Error('Sending cart data failed.!');\n        }\n      };\n      try {\n        await sendRequest();\n        dispatch(uiActions.showNotifcation({\n          status: 'success',\n          title: 'success!',\n          message: 'Sending cart data successfully!'\n        }));\n      } catch (error) {\n        dispatch(uiActions.showNotifcation({\n          status: 'Error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        }));\n      }\n    };\n    sendCodedata().catch(error => {});\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","totalPrice","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","title","removeItemFromCart","filter","sendcartData","cart","dispatch","sendCodedata","showNotifcation","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","catch","cartActions","actions"],"sources":["D:/react/redux2-shopping/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { uiActions } from './UI-Slice';\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    totalPrice: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n        const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id : newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price ,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n        const id = action.payload;\r\n        const existingItem = state.items.find((item) => item.id === id);\r\n      \r\n        state.totalQuantity--;\r\n      \r\n        if (existingItem.quantity === 1) {\r\n          state.items = state.items.filter(item => item.id !== id);\r\n        } else {\r\n          existingItem.quantity--;\r\n          existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n        }\r\n      }\r\n      \r\n  },\r\n});\r\n\r\nexport const sendcartData = (cart ) => {\r\n  return async (dispatch) => {\r\n    const sendCodedata = async () => {\r\n        dispatch(\r\n          uiActions.showNotifcation({\r\n            status: 'pending',\r\n            title: 'sending',\r\n            message: 'Sending cart data!',\r\n          })\r\n        );\r\n        const sendRequest = async() => {\r\n            const response = await fetch(\r\n                'https://expensetracker-20e7a-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json',\r\n                {\r\n                  method: 'POST',\r\n                  body: JSON.stringify(cart),\r\n                }\r\n              );\r\n              if (!response.ok) {\r\n                throw new Error('Sending cart data failed.!');\r\n              }\r\n        }\r\n      try{\r\n        await sendRequest();\r\n  \r\n        dispatch(\r\n          uiActions.showNotifcation({\r\n            status: 'success',\r\n            title: 'success!',\r\n            message: 'Sending cart data successfully!',\r\n          })\r\n        );\r\n      } catch(error){\r\n        dispatch(\r\n            uiActions.showNotifcation({\r\n              status: 'Error',\r\n              title: 'Error!',\r\n              message: 'Sending cart data failed!',\r\n            })\r\n          );\r\n      }  \r\n      \r\n      };\r\n    \r\n      sendCodedata().catch((error) => {\r\n      \r\n      });\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,CAAC;IAChBC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAChC,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAI,CAACQ,YAAY,EAAE;QACjBJ,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UACfD,EAAE,EAAGL,OAAO,CAACK,EAAE;UACfE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXb,UAAU,EAAEK,OAAO,CAACO,KAAK;UACzBhB,IAAI,EAAES,OAAO,CAACS;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLP,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACP,UAAU,GAAGO,YAAY,CAACP,UAAU,GAAGK,OAAO,CAACO,KAAK;MACnE;IACF,CAAC;IACDG,kBAAkBA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAE/DP,KAAK,CAACJ,aAAa,EAAE;MAErB,IAAIQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BV,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACP,UAAU,GAAGO,YAAY,CAACP,UAAU,GAAGO,YAAY,CAACK,KAAK;MACxE;IACF;EAEJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAM;EACrC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7BD,QAAQ,CACNzB,SAAS,CAAC2B,eAAe,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBR,KAAK,EAAE,SAAS;QAChBS,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAW;QAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,0FAA0F,EAC1F;UACEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;QAC3B,CACF,CAAC;QACD,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;MACN,CAAC;MACH,IAAG;QACD,MAAMR,WAAW,CAAC,CAAC;QAEnBL,QAAQ,CACNzB,SAAS,CAAC2B,eAAe,CAAC;UACxBC,MAAM,EAAE,SAAS;UACjBR,KAAK,EAAE,UAAU;UACjBS,OAAO,EAAE;QACX,CAAC,CACH,CAAC;MACH,CAAC,CAAC,OAAMU,KAAK,EAAC;QACZd,QAAQ,CACJzB,SAAS,CAAC2B,eAAe,CAAC;UACxBC,MAAM,EAAE,OAAO;UACfR,KAAK,EAAE,QAAQ;UACfS,OAAO,EAAE;QACX,CAAC,CACH,CAAC;MACL;IAEA,CAAC;IAEDH,YAAY,CAAC,CAAC,CAACc,KAAK,CAAED,KAAK,IAAK,CAEhC,CAAC,CAAC;EACN,CAAC;AAEH,CAAC;AAGD,OAAO,MAAME,WAAW,GAAGxC,SAAS,CAACyC,OAAO;AAE5C,eAAezC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}